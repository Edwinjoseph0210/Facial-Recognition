{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/login', credentials),\n  register: userData => api.post('/register', userData),\n  logout: () => api.post('/logout')\n};\nexport const dashboardAPI = {\n  getDashboardData: () => api.get('/dashboard')\n};\nexport const studentsAPI = {\n  getStudents: () => api.get('/students'),\n  addStudent: studentData => api.post('/students', studentData),\n  updateStudent: (id, studentData) => api.put(`/students/${id}`, studentData),\n  deleteStudent: id => api.delete(`/students/${id}`)\n};\nexport const attendanceAPI = {\n  getAttendance: () => api.get('/attendance'),\n  markAttendance: name => api.post('/mark_attendance', {\n    name\n  })\n};\nexport const reportsAPI = {\n  getReports: () => api.get('/reports'),\n  exportCSV: () => api.get('/export_csv')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","logout","dashboardAPI","getDashboardData","get","studentsAPI","getStudents","addStudent","studentData","updateStudent","id","put","deleteStudent","delete","attendanceAPI","getAttendance","markAttendance","name","reportsAPI","getReports","exportCSV"],"sources":["/Users/apple/Downloads/Ai_FACE_RECOGNITION-main/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token if available\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('authToken');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authAPI = {\n  login: (credentials) => api.post('/login', credentials),\n  register: (userData) => api.post('/register', userData),\n  logout: () => api.post('/logout'),\n};\n\nexport const dashboardAPI = {\n  getDashboardData: () => api.get('/dashboard'),\n};\n\nexport const studentsAPI = {\n  getStudents: () => api.get('/students'),\n  addStudent: (studentData) => api.post('/students', studentData),\n  updateStudent: (id, studentData) => api.put(`/students/${id}`, studentData),\n  deleteStudent: (id) => api.delete(`/students/${id}`),\n};\n\nexport const attendanceAPI = {\n  getAttendance: () => api.get('/attendance'),\n  markAttendance: (name) => api.post('/mark_attendance', { name }),\n};\n\nexport const reportsAPI = {\n  getReports: () => api.get('/reports'),\n  exportCSV: () => api.get('/export_csv'),\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC;IACpCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKzB,GAAG,CAAC0B,IAAI,CAAC,QAAQ,EAAED,WAAW,CAAC;EACvDE,QAAQ,EAAGC,QAAQ,IAAK5B,GAAG,CAAC0B,IAAI,CAAC,WAAW,EAAEE,QAAQ,CAAC;EACvDC,MAAM,EAAEA,CAAA,KAAM7B,GAAG,CAAC0B,IAAI,CAAC,SAAS;AAClC,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG;EAC1BC,gBAAgB,EAAEA,CAAA,KAAM/B,GAAG,CAACgC,GAAG,CAAC,YAAY;AAC9C,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EACzBC,WAAW,EAAEA,CAAA,KAAMlC,GAAG,CAACgC,GAAG,CAAC,WAAW,CAAC;EACvCG,UAAU,EAAGC,WAAW,IAAKpC,GAAG,CAAC0B,IAAI,CAAC,WAAW,EAAEU,WAAW,CAAC;EAC/DC,aAAa,EAAEA,CAACC,EAAE,EAAEF,WAAW,KAAKpC,GAAG,CAACuC,GAAG,CAAC,aAAaD,EAAE,EAAE,EAAEF,WAAW,CAAC;EAC3EI,aAAa,EAAGF,EAAE,IAAKtC,GAAG,CAACyC,MAAM,CAAC,aAAaH,EAAE,EAAE;AACrD,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG;EAC3BC,aAAa,EAAEA,CAAA,KAAM3C,GAAG,CAACgC,GAAG,CAAC,aAAa,CAAC;EAC3CY,cAAc,EAAGC,IAAI,IAAK7C,GAAG,CAAC0B,IAAI,CAAC,kBAAkB,EAAE;IAAEmB;EAAK,CAAC;AACjE,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG;EACxBC,UAAU,EAAEA,CAAA,KAAM/C,GAAG,CAACgC,GAAG,CAAC,UAAU,CAAC;EACrCgB,SAAS,EAAEA,CAAA,KAAMhD,GAAG,CAACgC,GAAG,CAAC,aAAa;AACxC,CAAC;AAED,eAAehC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
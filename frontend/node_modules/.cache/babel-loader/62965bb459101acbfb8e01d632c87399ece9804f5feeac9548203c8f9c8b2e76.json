{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Facial-Recognition-main 2/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setUser(user);\n      setIsAuthenticated(!!user);\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const login = async credentials => {\n    try {\n      const {\n        email,\n        password\n      } = credentials;\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      return {\n        success: true,\n        user: userCredential.user\n      };\n    } catch (error) {\n      let errorMessage = 'Login failed';\n      if (error.code === 'auth/user-not-found') {\n        errorMessage = 'User not found';\n      } else if (error.code === 'auth/wrong-password') {\n        errorMessage = 'Wrong password';\n      } else if (error.code === 'auth/invalid-email') {\n        errorMessage = 'Invalid email address';\n      } else if (error.code === 'auth/user-disabled') {\n        errorMessage = 'User account has been disabled';\n      }\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const {\n        email,\n        password,\n        confirm_password\n      } = userData;\n\n      // Validate password match\n      if (password !== confirm_password) {\n        return {\n          success: false,\n          message: 'Passwords do not match'\n        };\n      }\n\n      // Validate password length\n      if (password.length < 6) {\n        return {\n          success: false,\n          message: 'Password must be at least 6 characters'\n        };\n      }\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      return {\n        success: true,\n        user: userCredential.user\n      };\n    } catch (error) {\n      let errorMessage = 'Registration failed';\n      if (error.code === 'auth/email-already-in-use') {\n        errorMessage = 'Email is already registered';\n      } else if (error.code === 'auth/invalid-email') {\n        errorMessage = 'Invalid email address';\n      } else if (error.code === 'auth/weak-password') {\n        errorMessage = 'Password is too weak';\n      }\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","auth","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","unsubscribe","login","credentials","email","password","userCredential","success","error","errorMessage","code","message","register","userData","confirm_password","length","logout","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Downloads/Facial-Recognition-main 2/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut,\n  onAuthStateChanged\n} from 'firebase/auth';\nimport { auth } from '../firebase';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setUser(user);\n      setIsAuthenticated(!!user);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const { email, password } = credentials;\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      return { success: true, user: userCredential.user };\n    } catch (error) {\n      let errorMessage = 'Login failed';\n      if (error.code === 'auth/user-not-found') {\n        errorMessage = 'User not found';\n      } else if (error.code === 'auth/wrong-password') {\n        errorMessage = 'Wrong password';\n      } else if (error.code === 'auth/invalid-email') {\n        errorMessage = 'Invalid email address';\n      } else if (error.code === 'auth/user-disabled') {\n        errorMessage = 'User account has been disabled';\n      }\n      return { \n        success: false, \n        message: errorMessage\n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const { email, password, confirm_password } = userData;\n      \n      // Validate password match\n      if (password !== confirm_password) {\n        return {\n          success: false,\n          message: 'Passwords do not match'\n        };\n      }\n\n      // Validate password length\n      if (password.length < 6) {\n        return {\n          success: false,\n          message: 'Password must be at least 6 characters'\n        };\n      }\n\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      return { \n        success: true, \n        user: userCredential.user \n      };\n    } catch (error) {\n      let errorMessage = 'Registration failed';\n      if (error.code === 'auth/email-already-in-use') {\n        errorMessage = 'Email is already registered';\n      } else if (error.code === 'auth/invalid-email') {\n        errorMessage = 'Invalid email address';\n      } else if (error.code === 'auth/weak-password') {\n        errorMessage = 'Password is too weak';\n      }\n      return { \n        success: false, \n        message: errorMessage\n      };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}